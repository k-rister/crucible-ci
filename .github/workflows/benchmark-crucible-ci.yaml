name: benchmark-crucible-ci

on:
  workflow_call:
    inputs:
      ci_target:
        required: true
        type: string
      crucible_ci_test:
        required: false
        type: string
      ci_target_branch:
        required: true
        type: string
      crucible_ci_test_branch:
        required: false
        type: string
      github_workspace:
        required: true
        type: string
    secrets:
      registry_auth:
        required: false

concurrency:
  group: ${{ inputs.ci_target }}/${{ github.ref }}/benchmark-crucible-ci
  cancel-in-progress: true

env:
  GITHUB_WORKSPACE: ${{ inputs.github_workspace }}

jobs:
  gen-params:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      userenvs: ${{ steps.get-userenvs.outputs.userenvs }}
      github_hosted_scenarios: ${{ steps.get-scenarios-github.outputs.scenarios }}
      self_hosted_scenarios: ${{ steps.get-scenarios-self.outputs.scenarios }}
      repo_name: ${{ steps.get-repo-name.outputs.repo-name }}
    steps:

    - name: checkout crucible-ci default
      if: ${{ inputs.crucible_ci_test != 'yes' }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/crucible-ci
        ref: main
        path: crucible-ci
    - name: checkout crucible-ci crucible_ci_test
      if: ${{ inputs.crucible_ci_test == 'yes' }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/crucible-ci
        ref: ${{ inputs.crucible_ci_test_branch }}
        path: crucible-ci

    - name: checkout rickshaw
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/rickshaw
        ref: master
        path: rickshaw
    - name: run get-userenvs
      id: get-userenvs
      uses: ./crucible-ci/.github/actions/get-userenvs
      with:
        rickshaw-directory: "./rickshaw"
    - name: run get-scenarios-github
      id: get-scenarios-github
      uses: ./crucible-ci/.github/actions/get-scenarios
      with:
        runner-type: "github"
        benchmark: "${{ inputs.ci_target }}"
    - name: run get-scenarios-self
      id: get-scenarios-self
      uses: ./crucible-ci/.github/actions/get-scenarios
      with:
        runner-type: "self"
        runner-tags: "cpu-partitioning,remotehost"
        benchmark: "${{ inputs.ci_target }}"
    - name: run get-repo-name
      id: get-repo-name
      uses: ./crucible-ci/.github/actions/get-repo-name

  display-params:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: gen-params
    steps:
    - name: Echo gen-params outputs
      run: echo "${{ toJSON(needs.gen-params.outputs) }}"

  github-runners:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    needs:
    - gen-params
    - display-params
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJSON(needs.gen-params.outputs.github_hosted_scenarios) }}
        userenv: ${{ fromJSON(needs.gen-params.outputs.userenvs) }}
    steps:
    - name: Matrix Parameters => (${{ matrix.scenario.enabled }}, ${{ matrix.scenario.endpoint }}, ${{ matrix.scenario.benchmark }}, ${{ matrix.userenv }})
      run: |
        echo "enabled=${{ matrix.scenario.enabled }}"
        echo "endpoint=${{ matrix.scenario.endpoint }}"
        echo "benchmark=${{ matrix.scenario.benchmark }}"
        echo "userenv=${{ matrix.userenv }}"

    - name: checkout crucible-ci default
      if: ${{ inputs.crucible_ci_test != 'yes' }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/crucible-ci
        ref: main
        path: crucible-ci
    - name: checkout crucible-ci crucible_ci_test
      if: ${{ inputs.crucible_ci_test == 'yes' }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/crucible-ci
        ref: ${{ inputs.crucible_ci_test_branch }}
        path: crucible-ci

    - name: checkout bench-${{ inputs.ci_target }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/bench-${{ inputs.ci_target }}
        ref: ${{ inputs.ci_target_branch }}
        path: "bench-${{ inputs.ci_target }}"
    - name: import secret
      env:
        CLIENT_SERVER_REGISTRY_AUTH_SECRET: ${{ secrets.registry_auth }}
      if: env.CLIENT_SERVER_REGISTRY_AUTH_SECRET != ''
      run: sudo bash -c "echo \"$CLIENT_SERVER_REGISTRY_AUTH_SECRET\" > /root/crucible-ci-engines-token.json"
    - name: run crucible-ci->integration-tests
      if: ${{ matrix.scenario.enabled }}
      uses: ./crucible-ci/.github/actions/integration-tests
      with:
        artifact_tag: "${{ inputs.ci_target }}__github-runners__${{ matrix.scenario.endpoint }}-${{ matrix.scenario.benchmark }}-${{ matrix.userenv }}"
        ci_endpoint: "${{ matrix.scenario.endpoint }}"
        scenarios: "${{ matrix.scenario.benchmark }}"
        userenvs: "${{ matrix.userenv }}"
        ci_target: "${{ inputs.ci_target }}"
        ci_target_dir: "${{ github.workspace }}/bench-${{ inputs.ci_target }}"
    - name: skip crucible-ci->integration-tests
      if: ${{ ! matrix.scenario.enabled }}
      run: echo "crucible-ci->integration-tests not enabled"

  self-hosted-runners:
    runs-on: [ self-hosted, cpu-partitioning, remotehost ]
    timeout-minutes: 90
    needs:
    - gen-params
    - display-params
    strategy:
      fail-fast: false
      matrix:
        scenario: ${{ fromJSON(needs.gen-params.outputs.self_hosted_scenarios) }}
        userenv: ${{ fromJSON(needs.gen-params.outputs.userenvs) }}
    steps:
    - name: Matrix Parameters => (${{ matrix.scenario.enabled }}, ${{ matrix.scenario.endpoint }}, ${{ matrix.scenario.benchmark }}, ${{ matrix.userenv }})
      run: |
        echo "enabled=${{ matrix.scenario.enabled }}"
        echo "endpoint=${{ matrix.scenario.endpoint }}"
        echo "benchmark=${{ matrix.scenario.benchmark }}"
        echo "userenv=${{ matrix.userenv }}"

    - name: checkout crucible-ci default
      if: ${{ inputs.crucible_ci_test != 'yes' }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/crucible-ci
        ref: main
        path: crucible-ci
    - name: checkout crucible-ci crucible_ci_test
      if: ${{ inputs.crucible_ci_test == 'yes' }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/crucible-ci
        ref: ${{ inputs.crucible_ci_test_branch }}
        path: crucible-ci

    - name: checkout bench-${{ inputs.ci_target }}
      uses: actions/checkout@v4
      with:
        repository: perftool-incubator/bench-${{ inputs.ci_target }}
        ref: ${{ inputs.ci_target_branch }}
        path: "bench-${{ inputs.ci_target }}"
    - name: import secret
      env:
        CLIENT_SERVER_REGISTRY_AUTH_SECRET: ${{ secrets.registry_auth }}
      if: env.CLIENT_SERVER_REGISTRY_AUTH_SECRET != ''
      run: sudo bash -c "echo \"$CLIENT_SERVER_REGISTRY_AUTH_SECRET\" > /root/crucible-ci-engines-token.json"
    - name: run crucible-ci->integration-tests
      if: ${{ matrix.scenario.enabled }}
      uses: ./crucible-ci/.github/actions/integration-tests
      with:
        artifact_tag: "${{ inputs.ci_target }}__self-hosted-runners__${{ matrix.scenario.endpoint }}-${{ matrix.scenario.benchmark }}-${{ matrix.userenv }}"
        ci_endpoint: "${{ matrix.scenario.endpoint }}"
        scenarios: "${{ matrix.scenario.benchmark }}"
        userenvs: "${{ matrix.userenv }}"
        ci_target: "${{ inputs.ci_target }}"
        ci_target_dir: ${{ github.workspace }}/bench-${{ inputs.ci_target }}
    - name: skip crucible-ci->integration-tests
      if: ${{ ! matrix.scenario.enabled }}
      run: echo "crucible-ci->integration-tests not enabled"

  benchmark-crucible-ci-complete:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
    - github-runners
    - self-hosted-runners
    steps:
    - name: Confirm Success
      run: echo "benchmark-crucible-ci-complete"
